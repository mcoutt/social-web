{
  "name": "hwnodejs",
  "version": "1.0.0",
  "description": "simple testing apps by user and groups entities",
  "main": "app.js",
  "scripts": {
    "start": "ts-node src/app.ts",
    "clean": "rimraf dist",
    "build": "tsc -v && npm run clean && npm run tslint && npm run build-ts",
    "build-ts": "tsc",
    "watch": "NODE_ENV=development nodemon --exec ts-node src/app.ts",
    "tslint": "tslint -c tslint.json -p tsconfig.json",
    "tslint:fix": "tslint --fix src/**/*.{ts,js}",
    "test": "NODE_ENV=test mocha -r ts-node/register src/tests/*.spec.ts --exit",
    "startt": "npm run serve",
    "buildd": "npm run build-ts && npm run lint",
    "serve": "node build/src/index.js",
    "watch-node": "nodemon build/src/app.js",
    "watchh": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run watch-node\"",
    "testt": "jest --forceExit --coverage --verbose",
    "watch-test": "npm run test -- --watchAll",
    "watch-ts": "tsc -w",
    "lint": "tsc --noEmit && eslint \"**/*.{js,ts}\" --quiet --fix",
    "debug": "npm run build && npm run watch-debug",
    "serve-debug": "nodemon --inspect build/app.js",
    "watch-debug": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run serve-debug\"",
    "migration:generate": "npm run typeorm -- migration:generate --config src/config/ormconfig.json --connection  --name ",
    "migration:run": "npm run typeorm -- migration:run",
    "typeorm": "ts-node -r ./typeormConfig.ts ./node_modules/.bin/typeorm",
    "typeorm:sync": "yarn typeorm schema:sync",
    "typeorm:drop": "yarn typeorm schema:drop",
    "typeorm:reset": "yarn typeorm:drop && yarn typeorm:sync",
    "typeorm:cli": "ts-node ./node_modules/typeorm/cli -f ./ormconfig.ts"
  },
  "repository": {
    "type": "git",
    "url": "git@git.epam.com:mykhailo_koshelnyk/hwnodejs.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.0.0-rc.1",
    "@babel/core": "^7.0.0-rc.1",
    "@babel/node": "^7.0.0-rc.1",
    "@babel/preset-env": "^7.0.0-rc.1",
    "@typescript-eslint/eslint-plugin": "^2.34.0",
    "@typescript-eslint/parser": "^2.34.0",
    "eslint": "^7.0.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-react": "^7.20.0",
    "jest-cli": "^26.1.0",
    "nodemon": "^2.0.3"
  },
  "dependencies": {
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@hapi/joi": "^17.1.1",
    "@types/express": "^4.17.8",
    "@types/express-serve-static-core": "^4.17.13",
    "@types/node": "^14.11.5",
    "body-parser": "^1.19.0",
    "concurrently": "^5.2.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "csvtojson": "^2.0.10",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "helmet": "^4.1.1",
    "i": "^0.3.6",
    "lodash": "^4.17.21",
    "morgan": "^1.10.0",
    "npm": "^6.14.8",
    "pg": "^8.2.1",
    "pg-hstore": "^2.3.3",
    "reflect-metadata": "^0.1.13",
    "sqlite3": "^4.2.0",
    "ts-node": "^9.0.0",
    "tslint": "^6.1.3",
    "typedi": "^0.8.0",
    "typeorm": "^0.2.25",
    "typeorm-transactional-cls-hooked": "^0.1.12",
    "typeorm-typedi-extensions": "^0.2.3",
    "typescript": "^4.0.3",
    "uuid": "^7.0.3",
    "uuidv4": "^6.0.7"
  }
}
